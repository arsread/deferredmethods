<project name="deferred_methods" default="prepare-all" basedir=".">

	<property file="build.properties" />

	<path id="buildpath">
		<pathelement location="${junit.path}" />
		<pathelement location="${asm.path}" />
		<pathelement location="${asm.lib.path}" />
		<pathelement location="bin" />
		<pathelement location="${deferred.path}" />
	</path>

	<target name="prepare-all" depends="compile,compile-test,compile-junit-test,jar-sync" />

	<target name="compile" depends="extend-thread,extend-lock">
		<mkdir dir="bin" />
		<javac srcdir="src" includes="deferredmethods/**" destdir="bin" debug="true" includeAntRuntime="false">
			<classpath refid="buildpath" />
			<compilerarg value="-Xbootclasspath/p:${extendedthread.path}:${extenedlock.path}" />
		</javac>
		<mkdir dir="build" />
<!--		<jar basedir="bin" destfile="${deferred.path}" /> -->
		<jar destfile="${deferred.path}">
			<fileset dir="bin" includes="deferredmethods/**/*.class" excludes="deferredmethods/Buffer.class,deferredmethods/DeferredEnv.class" />
<!--			<fileset dir="src" includes="deferredmethods/**/*.java" /> -->
		</jar>

		<jar destfile="${bootinterface.path}">
			<fileset dir="bin" includes="deferredmethods/Buffer.class" />
			<fileset dir="bin" includes="deferredmethods/DeferredEnv.class" />
		</jar>
	</target>

	<target name="extend-thread" depends="compile-tlvinserter">
		<mkdir dir="bin-thread/java/lang" />
		<java fork="true" classname="deferredmethods.bytecodegeneration.extendthread.ExtendThread">
			<classpath refid="buildpath" />
		</java>
		<mkdir dir="build" />
		<jar basedir="bin-thread" destfile="${extendedthread.path}" />
		<delete dir="bin-thread" />
	</target>

	<target name="compile-tlvinserter">
		<mkdir dir="bin" />
		<javac srcdir="src" includes="deferredmethods/bytecodegeneration/extendthread/" destdir="bin" debug="true" includeAntRuntime="false">
			<classpath refid="buildpath" />
		</javac>
	</target>

	<target name="extend-lock" depends="compile-lockinserter">
		<mkdir dir="bin-lock/java/util/concurrent/locks/ReentrantReadWriteLock" />
		<java fork="true" classname="deferredmethods.bytecodegeneration.extendlock.ExtendReentrantLock">
			<classpath refid="buildpath" />
		</java>
		<mkdir dir="build" />
		<jar basedir="bin-lock" destfile="${extendedlock.path}" />
		<delete dir="bin-lock" />  
	</target>

	<target name="compile-lockinserter">
		<mkdir dir="bin" />
		<javac srcdir="src" includes="deferredmethods/bytecodegeneration/extendlock/" destdir="bin" debug="true" includeAntRuntime="false">
			<classpath refid="buildpath" />
		</javac>
	</target>

	<target name="compile-junit-test" depends="compile">
		<mkdir dir="bin" />
		<javac srcdir="src" includes="test/**" destdir="bin" debug="true" includeAntRuntime="false">
			<classpath refid="buildpath" />
		</javac>
		<mkdir dir="build" />
		<jar destfile="${deferred.junit.test.path}">
			<fileset dir="bin" includes="test/**" />
		</jar>
	</target>

	<target name="compile-test" depends="compile">
		<mkdir dir="bin" />
		<javac srcdir="src" includes="newTest/**" destdir="bin" debug="true" includeAntRuntime="false">
			<classpath refid="buildpath" />
		</javac>
		<mkdir dir="build" />
		<jar destfile="${deferred.test.path}">
			<fileset dir="bin" includes="newTest/**" />
		</jar>
	</target>

	<target name="clean">
		<delete dir="bin" />
		<delete dir="build" />
	</target>

	<target name="jar-sync" >
		<delete file="${sync.path}" /> 
		<jar destfile="${sync.path}" >
			<fileset dir="bin" includes="deferredmethods/syncInstrument/**/*.class" />
                        <manifest>
                                <attribute name="Premain-class" value="deferredmethods.syncInstrument.agent.Agent"/>
                        </manifest>
                </jar>
        </target>
	<!--
        <target name="compile-syn-injector">
                <delete dir="bin/" />
                <mkdir dir="bin/" />
                <javac srcdir="src/" destdir="bin/" includeAntRuntime="false">
                        <classpath location="/home/arsread/workspace/disl/lib/asm-debug-all-4.0.jar" />
                </javac>
        </target>
	-->


</project>
